/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.13).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import org.springframework.core.io.Resource;
import io.swagger.model.StudentIdentityCard;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2020-04-02T16:04:50.980Z")

@Api(value = "studentIdentityCard", description = "the studentIdentityCard API")
@RequestMapping(value = "/api")
public interface StudentIdentityCardApi {

    @ApiOperation(value = "Get Student Identity Card for the User", nickname = "getStudentIdentityCard", notes = "", response = StudentIdentityCard.class, authorizations = {
        @Authorization(value = "Token")
    }, tags={ "StudentIdentityCard", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved Student Identity Card model", response = StudentIdentityCard.class),
        @ApiResponse(code = 404, message = "Student Identity Card for this {userId} not found") })
    @RequestMapping(value = "/studentIdentityCard/{userId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<StudentIdentityCard> getStudentIdentityCard(@ApiParam(value = "",required=true) @PathVariable("userId") String userId) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"studentId\" : \"53675\",  \"studiesAt\" : \"Socialinių mokslų f.\",  \"surname\" : \"Universitaitė\",  \"spd\" : 701303,  \"name\" : \"Unė\",  \"personalNo\" : 48703030001,  \"validUntil\" : \"2021-06-30\",  \"validFrom\" : \"2017-09-01\",  \"barcode\" : \"94403905000000014\"}", StudentIdentityCard.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default StudentIdentityCardApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Get profile image for the Student Identity Card which belongs to the User", nickname = "getStudentIdentityCardImage", notes = "", authorizations = {
        @Authorization(value = "Token")
    }, tags={ "StudentIdentityCard", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved Student Identity Card profile image"),
        @ApiResponse(code = 404, message = "Student Identity Card image for this {userId} not found") })
    @RequestMapping(value = "/studentIdentityCard/{userId}/image",
        produces = { "image/jpeg" }, 
        method = RequestMethod.GET)
    default ResponseEntity<Void> getStudentIdentityCardImage(@ApiParam(value = "",required=true) @PathVariable("userId") String userId) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default StudentIdentityCardApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Get small profile image for the Student Identity Card which belongs to the User", nickname = "getStudentIdentityCardImageSmall", notes = "", authorizations = {
        @Authorization(value = "Token")
    }, tags={ "StudentIdentityCard", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved Student Identity Card small profile image"),
        @ApiResponse(code = 404, message = "Student Identity Card small image for this {userId} not found") })
    @RequestMapping(value = "/studentIdentityCard/{userId}/image/small",
        produces = { "image/jpeg" }, 
        method = RequestMethod.GET)
    default ResponseEntity<Void> getStudentIdentityCardImageSmall(@ApiParam(value = "",required=true) @PathVariable("userId") String userId) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default StudentIdentityCardApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Get NFC code for the Student Identity Card which belongs to the User", nickname = "getStudentIdentityCardNfc", notes = "", authorizations = {
        @Authorization(value = "Token")
    }, tags={ "StudentIdentityCard", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved Student Identity Card NFC code"),
        @ApiResponse(code = 404, message = "Student Identity Card NFC code for this {userId} not found") })
    @RequestMapping(value = "/studentIdentityCard/{userId}/nfc",
        produces = { "text/plain" }, 
        method = RequestMethod.GET)
    default ResponseEntity<Void> getStudentIdentityCardNfc(@ApiParam(value = "",required=true) @PathVariable("userId") String userId) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default StudentIdentityCardApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Get QR code for the Student Identity Card which belongs to the User", nickname = "getStudentIdentityCardQr", notes = "", authorizations = {
        @Authorization(value = "Token")
    }, tags={ "StudentIdentityCard", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved Student Identity Card QR code"),
        @ApiResponse(code = 404, message = "Student Identity Card QR code for this {userId} not found") })
    @RequestMapping(value = "/studentIdentityCard/{userId}/qr",
        produces = { "text/plain" }, 
        method = RequestMethod.GET)
    default ResponseEntity<Void> getStudentIdentityCardQr(@ApiParam(value = "",required=true) @PathVariable("userId") String userId) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default StudentIdentityCardApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Get signature image for the Student Identity Card which belongs to the User", nickname = "getStudentIdentityCardSignature", notes = "", authorizations = {
        @Authorization(value = "Token")
    }, tags={ "StudentIdentityCard", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved Student Identity Card signature image"),
        @ApiResponse(code = 404, message = "Student Identity Card signature image for this {userId} not found") })
    @RequestMapping(value = "/studentIdentityCard/{userId}/signature",
        produces = { "image/jpeg" }, 
        method = RequestMethod.GET)
    default ResponseEntity<Void> getStudentIdentityCardSignature(@ApiParam(value = "",required=true) @PathVariable("userId") String userId) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default StudentIdentityCardApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Update profile image for the Student Identity Card which belongs to the User", nickname = "putStudentIdentityCardImage", notes = "", authorizations = {
        @Authorization(value = "Token")
    }, tags={ "StudentIdentityCard", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "Successfully uploaded Student Identity Card profile image"),
        @ApiResponse(code = 400, message = "Provided image is invalid") })
    @RequestMapping(value = "/studentIdentityCard/{userId}/image",
        consumes = { "multipart/form-data" },
        method = RequestMethod.PUT)
    default ResponseEntity<Void> putStudentIdentityCardImage(@ApiParam(value = "",required=true) @PathVariable("userId") String userId,@ApiParam(value = "Image to upload") @Valid @RequestPart(value="image", required=true) MultipartFile image) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default StudentIdentityCardApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Request to revalidate and extend expiration for Student Identity Card", nickname = "putStudentIdentityCardValidation", notes = "", authorizations = {
        @Authorization(value = "Token")
    }, tags={ "StudentIdentityCard", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "Successfully requested Student Identity Card revalidation"),
        @ApiResponse(code = 404, message = "Passport for this {userId} not found") })
    @RequestMapping(value = "/studentIdentityCard/{userId}/validate",
        method = RequestMethod.PUT)
    default ResponseEntity<Void> putStudentIdentityCardValidation(@ApiParam(value = "",required=true) @PathVariable("userId") String userId) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default StudentIdentityCardApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }

}
